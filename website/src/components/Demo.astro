---
interface Props {
  name: string;
}

const { name } = Astro.props;
---

<canvas class="demo" id="canvas" oncontextmenu="event.preventDefault()"
></canvas>
<script type="text/javascript" is:inline>
  var Module = {
    preRun: [],
    postRun: [],
    print: (function () {
      return function (text) {
        text = Array.prototype.slice.call(arguments).join(" ");
        console.log(text);
      };
    })(),
    printErr: function (text) {
      text = Array.prototype.slice.call(arguments).join(" ");
      console.error(text);
    },
    canvas: (function () {
      var canvas = document.getElementById("canvas");
      canvas.addEventListener(
        "webglcontextlost",
        function (e) {
          alert("FIXME: WebGL context lost, please reload the page");
          e.preventDefault();
        },
        false,
      );
      return canvas;
    })(),
    setStatus: function (text) {},
    monitorRunDependencies: function (left) {},
  };
  window.onerror = function (event) {
    console.log("onerror: " + event.message);
  };
</script>
<script type="text/javascript" src=`demos/${name}.js` async is:inline></script>
<style>
  .demo {
    margin-right: auto;
    margin-left: auto;
    border: 0;
    width: 800px;
    height: 600px;
    overflow: hidden;
    display: block;
    image-rendering: optimizeSpeed;
    image-rendering: -moz-crisp-edges;
    image-rendering: -o-crisp-edges;
    image-rendering: -webkit-optimize-contrast;
    image-rendering: optimize-contrast;
    image-rendering: crisp-edges;
    image-rendering: pixelated;
    -ms-interpolation-mode: nearest-neighbor;
  }
</style>
