#version 300 es

precision mediump float;
precision mediump sampler2DShadow;

out vec4 FragColor;

in vec3 WorldPos;
in vec3 WorldNormal;
in vec4 light_proj_pos;

// uniforms
uniform vec3 light_dir;
uniform vec3 eye_pos;

uniform sampler2DShadow shadow_map;

const float spec_power = 2.2;
const float ambient_intensity = 0.25;

void main()
{
  vec3 l = normalize(light_dir);
  vec3 n = normalize(WorldNormal);

  float n_dot_l = dot(n, l);
  vec3 objectColor = vec3(n * 0.5 + 0.5);

  if (n_dot_l > 0.0) {
    vec3 light_pos = light_proj_pos.xyz / light_proj_pos.w;
    vec3 sm_pos = vec3((light_pos.xy + 1.0) * 0.5, light_pos.z);
    float s = texture(shadow_map, sm_pos);
    float diff_intensity = max(n_dot_l * s, 0.0);

    vec3 v = normalize(eye_pos - WorldPos.xyz);
    vec3 r = reflect(-l, n);
    float r_dot_v = max(dot(r, v), 0.0);
    float spec_intensity = pow(r_dot_v, spec_power) * n_dot_l * s;

    FragColor = vec4(vec3(spec_intensity) + (diff_intensity + ambient_intensity) * objectColor.rgb, 1.0);
  }
  else {
    FragColor = vec4(objectColor.rgb * ambient_intensity, 1.0);
  }

  FragColor = FragColor;

}